using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using DotNetOpenAuth.OpenId.Extensions.AttributeExchange;
using HM13OA.Common;
using HM13OA.IService;
using HM13OA.Model;
using HM13OA.UI.Models;

namespace HM13OA.UI.Controllers
{
    public class UserLoginController : Controller
    {
        public IUserInfoService UserInfoService { get; set; }

        public ActionResult Index()
        {
            return View();
        }

        public ActionResult ValidateCode()
        {
            ValidateCode vCode = new ValidateCode();
            string code = vCode.CreateValidateCode(4);
            Session["ValidateCode"] = code;
            byte[] bytes = vCode.CreateValidateGraphic(code);
            return File(bytes, @"image/jpeg");

        }
        [HttpPost]
        public ActionResult Login(UserInfoViewModel userInfo)
        {
            string result = "no";


            //判断是否是一个正常的请求
            if (Session["ValidateCode"] == null || Session["ValidateCode"].ToString() == "")
            {
                return Content("请正常请求");
            }

            string vcode = Request["vCode"];
            //先匹配验证码
            if (Session["ValidateCode"].ToString().Equals(vcode,StringComparison.InvariantCultureIgnoreCase))
            {
                //根据用户名密码进行查询
                if (UserInfoService.Login(new UserInfo()
                {
                    UserName = userInfo.UserName,
                    UserPwd = userInfo.UserPwd
                }))
                {
                    result = "ok";
                    Session["UserLogin"] = userInfo;
                }
                else
                {
                    result = "用户名或密码错误";
                    Session["ValidateCode"] = "";
                }
            }
            else
            {
                //验证码不匹配
                result = "验证码错误";
                Session["ValidateCode"] = "";
            }

            return Content(result);
        }

        public ActionResult Logout()
        {
            Session["UserInfo"] = null;
            return RedirectToAction("Index");
        }
    }
}
