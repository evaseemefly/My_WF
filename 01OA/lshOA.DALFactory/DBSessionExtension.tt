<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ output extension=".cs" #>
 <#
CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string inputFile = @"..\\lshOA.MODEL\\14OAEntities.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>

using lshOA.IDAL;

namespace lshOA.DALFactory
{

	
	/// <summary>
    /// DBSession的拓展类
    /// </summary>
    public partial class DBSession : IDAL.IDBSession
    {
	<#
	foreach(EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e=>e.Name))
    {
	#>
        private IDAL.I<#=entity.Name#>DAL _<#=entity.Name#>Dal;

        public I<#=entity.Name#>DAL <#=entity.Name#>DAL
        {
            get
            {
                if (_<#=entity.Name#>Dal == null)
                {
                    _<#=entity.Name#>Dal = AbstractFactory.Create<#=entity.Name#>DAL();
                }
                return _<#=entity.Name#>Dal;
            }

            set { _<#=entity.Name#>Dal = value; }
        }
		<#}#>
    }
}