@model lshOA.MODEL.ActionInfo

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ShowEditInfo</title>
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script type="text/javascript">
        function subEditForm() {
            $("#form1").submit();
        }
        function afterEdit() {
            window.parent.afterEdit();
        }
    </script>
</head>
<body>
    @using (Ajax.BeginForm("EditAction",new { },new AjaxOptions() { OnSuccess="afterEdit"},new { id="form1"}))
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>权限管理 <span style="color:aqua">@Model.ActionInfoName</span></h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.SubTime)
            @*<div class="form-group">
                @Html.LabelFor(model => model.SubTime,"修改时间", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SubTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SubTime, "", new { @class = "text-danger" })
                </div>
            </div>*@
    
            @*<div class="form-group">
                @Html.LabelFor(model => model.DelFlag, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DelFlag, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DelFlag, "", new { @class = "text-danger" })
                </div>
            </div>*@
    
            @*<div class="form-group">
                @Html.LabelFor(model => model.ModifiedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModifiedOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModifiedOn, "", new { @class = "text-danger" })
                </div>
            </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.ActionInfoName, "权限名称", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ActionInfoName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ActionInfoName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Sort, "排序", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Sort, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Sort, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Url, "Url", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Remark,"备注", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                </div>
            </div>
    
           
    
            <div class="form-group">
                @Html.LabelFor(model => model.HttpMethod,"请求方式", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select name="HttpMethod">
                        @if (Model.HttpMethod == "GET")
                        {
                            <option value="GET" selected="selected">GET</option>
                            <option value="POST">POST</option>
                        }
                        else
                        {
                            <option value="GET">GET</option>
                            <option value="POST" selected="selected">POST</option>
                        }
                    </select>
                </div>

                @*<div class="col-md-10">
                    @Html.EditorFor(model => model.HttpMethod, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HttpMethod, "", new { @class = "text-danger" })
                </div>*@
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.ActionMethodName, "方法名称", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ActionMethodName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ActionMethodName, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.ControllerName, "控制器名称", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ControllerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ControllerName, "", new { @class = "text-danger" })
                </div>
            </div>
    


    
            <div class="form-group">
                @Html.LabelFor(model => model.ActionTypeEnum, "权限类型", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select name="ActionTypeEnum">
                        @if (Model.ActionTypeEnum == 0)
                        {
                            <option value="0" selected="selected">普通权限</option>
                            <option value="1">菜单权限</option>
                        }
                        else
                        {
                            <option value="0">普通权限</option>
                            <option value="1"selected="selected">菜单权限</option>
                        }
                    </select>
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.MenuIcon, "图标", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MenuIcon, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MenuIcon, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.IconWidth, "图标宽度", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IconWidth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IconWidth, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.IconHeight, "图标高度", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IconHeight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IconHeight, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
