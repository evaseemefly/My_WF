@model lshOA.MODEL.RoleInfo

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ShowEditInfo</title>
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    @*<script src="~/Scripts/EasyUI/jquery-easyui-1.4.4/jquery.easyui.min.js"></script>*@
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script type="text/javascript">
        $(function () {            
            $(".labelText").css("color", "white")
        });
        function subForm() {
            $("#editForm").submit();
        }
        function afterEdit(data) {
            if (data == "ok") {
                window.parent.afterEdit(data);
            }
        }
    </script>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    
    
    @using (Ajax.BeginForm("EditRoleInfo", "RoleInfo", new { }, new AjaxOptions() { HttpMethod = "post", OnSuccess = "afterEdit" }, new { id = "editForm" }))
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal" @*style="height:100%"*@>
            <h4>RoleInfo</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)
    
            <div class="form-group">
                @Html.LabelFor(model => model.RoleName,"角色名称", new { @class = "labelText" } @*htmlAttributes: new { @class = "control-label col-md-2" }*@)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.DelFlag, "删除标记", new { @class = "labelText" } @*htmlAttributes: new { @class = "control-label col-md-2" }*@)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DelFlag, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DelFlag, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.SubTime, "添加时间", new { @class = "labelText" }@*htmlAttributes: new { @class = "control-label col-md-2" }*@)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SubTime,  new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SubTime, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Remark, "备注", new { @class = "labelText" }  @*htmlAttributes: new { @class = "control-label col-md-2" }*@)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.ModifiedOn, "修改时间", new { @class = "labelText" } @*htmlAttributes: new { @class = "control-label col-md-2" }*@)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModifiedOn,  new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModifiedOn, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Sort, "排序", new { @class = "labelText" }  @*htmlAttributes: new { @class = "control-label col-md-2" }*@)
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Sort, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Sort, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
